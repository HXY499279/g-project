{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\g-project\\\\src\\\\components\\\\Content\\\\\\u5F85\\u5F52\\u56E0\\u4E8B\\u4EF6\\\\index.js\";\nimport React, { Component, Fragment } from 'react'; //引入组件\n\nimport { Select, List } from 'antd'; //引入图标\n\nimport { CloseCircleOutlined, PlusCircleOutlined } from '@ant-design/icons'; //引入css文件\n\nimport './style.css'; //从组件中获取组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nclass ContentSecond extends Component {\n  constructor(props) {\n    super(props);\n\n    this.iconAddClick = () => {\n      const list = [...this.state.list, 1];\n      this.setState({\n        list\n      });\n    };\n\n    this.handleItemClick = index => {\n      console.log(index);\n      let list = [...this.state.list];\n      list[index] = 0; // 值变成0的时候，同时让数据数组中的数据移出\n\n      this.setState({\n        list\n      });\n      this.props.deleteTouchEventData(index);\n    };\n\n    this.ontouchEventsChange = (index, e) => {\n      // console.log(index)\n      this.props.acqTouchEventData(index, e);\n    };\n\n    this.getListItems = () => {\n      return this.state.list.map((item, index) => {\n        if (this.state.list[index] === 1) {\n          return /*#__PURE__*/_jsxDEV(List.Item, {\n            className: \"listitem\",\n            children: [/*#__PURE__*/_jsxDEV(Select, {\n              name: \"touchEvents\",\n              className: \"select_middle\",\n              placeholder: \"\\u4E8B\\u4EF6\\u540D\",\n              ref: Select => {\n                this.touchEventsElem = Select;\n              },\n              onChange: this.ontouchEventsChange.bind(this, index),\n              children: [this.mapRenderEventOption(), \";\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              className: \"select_middle\",\n              placeholder: \"\\u5206\\u7EC4\\u5C5E\\u6027\\u540D\",\n              children: [this.mapRenderAttrOption(), \";\"]\n            }, index + 500, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CloseCircleOutlined, {\n              style: {\n                display: 'inline-block',\n                marginRight: 10\n              },\n              className: \"icon\",\n              onClick: this.handleItemClick.bind(this, index)\n            }, index + 1000, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this);\n        } else {\n          return '';\n        }\n      });\n    };\n\n    this.mapRenderEventOption = () => {\n      return this.props.events.map(item => {\n        return /*#__PURE__*/_jsxDEV(Option, {\n          value: item.event\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this);\n      });\n    };\n\n    this.mapRenderAttrOption = () => {\n      return this.props.attrs.map(item => {\n        return /*#__PURE__*/_jsxDEV(Option, {\n          children: item.name\n        }, item.id + 's', false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this);\n      });\n    };\n\n    this.state = {\n      list: []\n    };\n  } // 添加\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PlusCircleOutlined, {\n        className: \"icon\",\n        style: {\n          position: 'relative',\n          top: -21,\n          left: 100\n        },\n        onClick: this.iconAddClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eventComponent eventComponent2\",\n        children: /*#__PURE__*/_jsxDEV(List, {\n          itemLayout: \"horizontal\",\n          children: this.getListItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContentSecond;","map":{"version":3,"sources":["D:/code/g-project/src/components/Content/待归因事件/index.js"],"names":["React","Component","Fragment","Select","List","CloseCircleOutlined","PlusCircleOutlined","Option","ContentSecond","constructor","props","iconAddClick","list","state","setState","handleItemClick","index","console","log","deleteTouchEventData","ontouchEventsChange","e","acqTouchEventData","getListItems","map","item","touchEventsElem","bind","mapRenderEventOption","mapRenderAttrOption","display","marginRight","events","event","id","attrs","name","render","position","top","left"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\n//引入组件\r\nimport { Select, List } from 'antd';\r\n//引入图标\r\nimport { CloseCircleOutlined, PlusCircleOutlined } from '@ant-design/icons';\r\n//引入css文件\r\nimport './style.css';\r\n//从组件中获取组件\r\nconst { Option } = Select;\r\n\r\n\r\nclass ContentSecond extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: []\r\n        }\r\n    }\r\n    // 添加\r\n    iconAddClick = () => {\r\n        const list = [...this.state.list, 1]\r\n        this.setState({\r\n            list\r\n        })\r\n    }\r\n    //删除 \r\n    handleItemClick = (index) => {\r\n        console.log(index)\r\n        let list = [...this.state.list]\r\n        list[index] = 0\r\n        // 值变成0的时候，同时让数据数组中的数据移出\r\n        this.setState({\r\n            list\r\n        })\r\n        this.props.deleteTouchEventData(index)\r\n    }\r\n\r\n    ontouchEventsChange = (index, e) => {\r\n        // console.log(index)\r\n        this.props.acqTouchEventData(index, e);\r\n    }\r\n\r\n    //循环渲染每一项\r\n    getListItems = () => {\r\n        return this.state.list.map((item, index) => {\r\n            if (this.state.list[index] === 1) {\r\n                return (\r\n                    <List.Item\r\n                        key={index}\r\n                        className='listitem'\r\n                    >\r\n                        <Select\r\n                            name='touchEvents'\r\n                            key={index}\r\n                            className='select_middle'\r\n                            placeholder='事件名'\r\n                            ref={(Select) => { this.touchEventsElem = Select }}\r\n                            onChange={this.ontouchEventsChange.bind(this, index)}\r\n                        >\r\n                            {this.mapRenderEventOption()};\r\n                        </Select>\r\n                        <Select\r\n                            key={index + 500}\r\n                            className='select_middle'\r\n                            placeholder=\"分组属性名\"\r\n                        >\r\n                            {this.mapRenderAttrOption()};\r\n                        </Select>\r\n                        <CloseCircleOutlined\r\n                            key={index + 1000}\r\n                            style={{ display: 'inline-block', marginRight: 10 }}\r\n                            className='icon'\r\n                            onClick={this.handleItemClick.bind(this, index)}\r\n                        />\r\n                    </List.Item>\r\n                )\r\n            } else {\r\n                return '';\r\n            }\r\n        })\r\n    }\r\n    //添加事件的数据\r\n    mapRenderEventOption = () => {\r\n        return this.props.events.map(item => {\r\n            return (\r\n                <Option key={item.id} value={item.event} ></Option>\r\n            )\r\n        })\r\n    }\r\n    //添加属性的数据\r\n    mapRenderAttrOption = () => {\r\n        return this.props.attrs.map(item => {\r\n            return (\r\n                <Option key={item.id + 's'}>{item.name}</Option>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <PlusCircleOutlined\r\n                    className='icon'\r\n                    style={{ position: 'relative', top: -21, left: 100 }}\r\n                    onClick={this.iconAddClick}\r\n                />\r\n                <div className='eventComponent eventComponent2' >\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                    >\r\n                        {this.getListItems()}\r\n                    </List>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ContentSecond;\r\n"]},"metadata":{},"sourceType":"module"}