{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\g-project\\\\src\\\\components\\\\Content\\\\\\u8FC7\\u7A0B\\u4E8B\\u4EF6\\\\index.js\";\nimport React, { Component, Fragment } from 'react'; //引入组件\n\nimport { Select, List } from 'antd'; //引入图标\n\nimport { CloseCircleOutlined, PlusCircleOutlined } from '@ant-design/icons'; //引入css文件\n\nimport './style.css'; //从组件中获取组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nclass ContentThird extends Component {\n  constructor(props) {\n    super(props);\n\n    this.iconAddClick = () => {\n      const list = [...this.state.list, 1];\n      this.setState({\n        list\n      });\n    };\n\n    this.handleItemClick = index => {\n      let list = [...this.state.list];\n      list[index] = 0;\n      this.setState({\n        list\n      });\n    };\n\n    this.onprocessEventsChange = e => {\n      this.props.acqTouchEventData(e);\n    };\n\n    this.getListItems = () => {\n      return this.state.list.map((item, index) => {\n        if (this.state.list[index] === 1) {}\n\n        return /*#__PURE__*/_jsxDEV(List.Item, {\n          className: \"listitem\",\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            name: \"processEvents\",\n            className: \"select_middle\",\n            placeholder: \"\\u4E8B\\u4EF6\\u540D\",\n            ref: Select => {\n              this.processEventsElem = Select;\n            },\n            onChange: this.onprocessEventsChange,\n            children: [this.mapRenderEventOption(), \";\"]\n          }, item + 'h', true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            className: \"select_middle\",\n            placeholder: \"\\u5173\\u8054\\u5C5E\\u6027\\u540D\",\n            children: [this.mapRenderAttrOption(), \";\"]\n          }, item + \"x\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CloseCircleOutlined, {\n            style: {\n              display: 'inline-block',\n              marginRight: 10\n            },\n            className: \"icon\",\n            onClick: this.handleItemClick.bind(this, index)\n          }, item + 'y', false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this);\n      });\n    };\n\n    this.mapRenderEventOption = () => {\n      return this.props.events.map(item => {\n        return /*#__PURE__*/_jsxDEV(Option, {\n          value: item.event,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this);\n      });\n    };\n\n    this.mapRenderAttrOption = () => {\n      return this.props.attrs.map(item => {\n        return /*#__PURE__*/_jsxDEV(Option, {\n          children: item.name\n        }, item.id + 's', false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this);\n      });\n    };\n\n    this.state = {\n      list: []\n    };\n  } // 添加\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PlusCircleOutlined, {\n        className: \"icon\",\n        style: {\n          position: 'relative',\n          top: -21,\n          left: 84\n        },\n        onClick: this.iconAddClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eventComponent eventComponent2\",\n        children: /*#__PURE__*/_jsxDEV(List, {\n          itemLayout: \"horizontal\" // dataSource={this.state.list}\n          // renderItem={(item) => (\n          //     this.getListItems(item)\n          // )}\n          ,\n          children: this.getListItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContentThird;","map":{"version":3,"sources":["D:/code/g-project/src/components/Content/过程事件/index.js"],"names":["React","Component","Fragment","Select","List","CloseCircleOutlined","PlusCircleOutlined","Option","ContentThird","constructor","props","iconAddClick","list","state","setState","handleItemClick","index","onprocessEventsChange","e","acqTouchEventData","getListItems","map","item","processEventsElem","mapRenderEventOption","mapRenderAttrOption","display","marginRight","bind","events","event","name","id","attrs","render","position","top","left"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\n//引入组件\r\nimport { Select, List } from 'antd';\r\n//引入图标\r\nimport { CloseCircleOutlined, PlusCircleOutlined } from '@ant-design/icons';\r\n//引入css文件\r\nimport './style.css';\r\n//从组件中获取组件\r\nconst { Option } = Select;\r\n\r\n\r\nclass ContentThird extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: []\r\n        }\r\n    }\r\n    // 添加\r\n    iconAddClick = () => {\r\n        const list = [...this.state.list, 1]\r\n        this.setState({\r\n            list\r\n        })\r\n    }\r\n    //删除 \r\n    handleItemClick = (index) => {\r\n        let list = [...this.state.list]\r\n        list[index] = 0\r\n        this.setState({\r\n            list\r\n        })\r\n    }\r\n\r\n    onprocessEventsChange = (e) => {\r\n        this.props.acqTouchEventData( e );\r\n\r\n    }\r\n\r\n    //循环渲染每一项\r\n    getListItems = () => {\r\n        return this.state.list.map((item, index) => {\r\n            if (this.state.list[index] === 1){\r\n                \r\n            }\r\n                return (\r\n                    <List.Item className='listitem'>\r\n                        <Select\r\n                            name='processEvents'\r\n                            key={item + 'h'}\r\n                            className='select_middle'\r\n                            placeholder='事件名'\r\n                            ref={(Select) => { this.processEventsElem = Select }}\r\n                            onChange = {this.onprocessEventsChange}\r\n                        >\r\n                            {this.mapRenderEventOption()};\r\n                    </Select>\r\n                        <Select\r\n                            key={item + \"x\"}\r\n                            className='select_middle'\r\n                            placeholder=\"关联属性名\"\r\n                        >\r\n                            {this.mapRenderAttrOption()};\r\n                    </Select>\r\n                        <CloseCircleOutlined\r\n                            style={{ display: 'inline-block', marginRight: 10 }}\r\n                            key={item + 'y'}\r\n                            className='icon'\r\n                            onClick={this.handleItemClick.bind(this, index)}\r\n                        />\r\n                    </List.Item>\r\n                )\r\n        })\r\n    }\r\n    //添加事件的数据\r\n    mapRenderEventOption = () => {\r\n        return this.props.events.map(item => {\r\n            return (\r\n                <Option key={item.id} value={item.event} >{item.name}</Option>\r\n            )\r\n        })\r\n    }\r\n    //添加属性的数据\r\n    mapRenderAttrOption = () => {\r\n        return this.props.attrs.map(item => {\r\n            return (\r\n                <Option key={item.id + 's'}>{item.name}</Option>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <PlusCircleOutlined\r\n                    className='icon'\r\n                    style={{ position: 'relative', top: -21, left: 84 }}\r\n                    onClick={this.iconAddClick}\r\n                />\r\n                <div className='eventComponent eventComponent2' >\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                    // dataSource={this.state.list}\r\n                    // renderItem={(item) => (\r\n                    //     this.getListItems(item)\r\n                    // )}\r\n                    >\r\n                        {this.getListItems()}\r\n                    </List>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ContentThird;\r\n"]},"metadata":{},"sourceType":"module"}