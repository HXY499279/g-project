{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\g-project\\\\src\\\\components\\\\Footer\\\\ResultShow\\\\index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Chart } from '@antv/g2';\nimport emitter from \"../../../event\"; //引入组件\n\nimport { Table } from 'antd'; //引入css文件\n\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\n\nclass ReasultShow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.eventEmitter = emitter.addListener(\"callMe\", () => {\n        console.log(\"发射器被启动，数据发送到了页面组件中\");\n\n        let update = function () {\n          let data = [];\n          let result = this.props.resultData;\n\n          if (result[0] != '' && result[0] !== undefined && result != '') {\n            for (let i = 1; i <= result[0].length; i++) {\n              data.push({\n                key: i,\n                touchEvents: `${result[0][i - 1][1]} (${result[0][i - 1][0]})`,\n                totalClicks: result[1][i - 1],\n                clickRate: `${result[2][i - 1]} (${result[3][i - 1] * 100 + '%'})`,\n                durationDistr: /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: `c${i}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 44\n                }, this),\n                stepLengthDistr: /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: `C${i}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 46\n                }, this),\n                // durationDistr: result[4][i-1],\n                // stepLengthDistr: result[5][i-1],\n                valueRealization: result[6][i - 1],\n                contributionRate: result[7][i - 1]\n              });\n            }\n          }\n\n          return data;\n        };\n\n        update = update.bind(this);\n        let data = update();\n        this.setState({\n          data\n        });\n        setTimeout(() => {\n          console.log('直方图的第一次渲染');\n          const result = this.props.resultData;\n\n          if (result[0] != '' && result[0] !== undefined && result != '') {\n            if (result[0].length < 10) {\n              //转换时长\n              for (let i = 1; i <= result[0].length; i++) {\n                const data = [{\n                  year: '1',\n                  value: result[4][i - 1][0]\n                }, {\n                  year: '2',\n                  value: result[4][i - 1][1]\n                }, {\n                  year: '3',\n                  value: result[4][i - 1][2]\n                }, {\n                  year: '4',\n                  value: result[4][i - 1][3]\n                }, {\n                  year: '5',\n                  value: result[4][i - 1][4]\n                }, {\n                  year: '6',\n                  value: result[4][i - 1][5]\n                }, {\n                  year: '7',\n                  value: result[4][i - 1][6]\n                }, {\n                  year: '8',\n                  value: result[4][i - 1][7]\n                }, {\n                  year: '9',\n                  value: result[4][i - 1][8]\n                }, {\n                  year: '9',\n                  value: result[4][i - 1][9]\n                }];\n                const chart = new Chart({\n                  container: `c${i}`,\n                  autoFit: true,\n                  height: 100,\n                  width: 10\n                });\n                chart.data(data);\n                chart.tooltip({\n                  showMarkers: false\n                });\n                chart.interval().position('year*value');\n                chart.interaction('element-active');\n                chart.render();\n              } //转化步长\n\n\n              for (let i = 1; i <= result[0].length; i++) {\n                const data = [{\n                  year: '1',\n                  value: result[5][i - 1][0]\n                }, {\n                  year: '2',\n                  value: result[5][i - 1][1]\n                }, {\n                  year: '3',\n                  value: result[5][i - 1][2]\n                }, {\n                  year: '4',\n                  value: result[5][i - 1][3]\n                }, {\n                  year: '5',\n                  value: result[5][i - 1][4]\n                }, {\n                  year: '6',\n                  value: result[5][i - 1][5]\n                }, {\n                  year: '7',\n                  value: result[5][i - 1][6]\n                }, {\n                  year: '8',\n                  value: result[5][i - 1][7]\n                }, {\n                  year: '9',\n                  value: result[5][i - 1][8]\n                }, {\n                  year: '9',\n                  value: result[5][i - 1][9]\n                }];\n                const chart = new Chart({\n                  container: `C${i}`,\n                  autoFit: true,\n                  height: 100\n                });\n                chart.data(data);\n                chart.tooltip({\n                  showMarkers: false\n                });\n                chart.interval().position('year*value');\n                chart.interaction('element-active');\n                chart.render();\n              }\n            } else if (result[0].length >= 10) {\n              //转换时长\n              for (let i = 1; i <= 10; i++) {\n                const data = [{\n                  year: '1',\n                  value: result[4][i - 1][0]\n                }, {\n                  year: '2',\n                  value: result[4][i - 1][1]\n                }, {\n                  year: '3',\n                  value: result[4][i - 1][2]\n                }, {\n                  year: '4',\n                  value: result[4][i - 1][3]\n                }, {\n                  year: '5',\n                  value: result[4][i - 1][4]\n                }, {\n                  year: '6',\n                  value: result[4][i - 1][5]\n                }, {\n                  year: '7',\n                  value: result[4][i - 1][6]\n                }, {\n                  year: '8',\n                  value: result[4][i - 1][7]\n                }, {\n                  year: '9',\n                  value: result[4][i - 1][8]\n                }, {\n                  year: '9',\n                  value: result[4][i - 1][9]\n                }];\n                const chart = new Chart({\n                  container: `c${i}`,\n                  autoFit: true,\n                  height: 100,\n                  width: 10\n                });\n                chart.data(data);\n                chart.tooltip({\n                  showMarkers: false\n                });\n                chart.interval().position('year*value');\n                chart.interaction('element-active');\n                chart.render();\n              } //转化步长\n\n\n              for (let i = 1; i <= 10; i++) {\n                const data = [{\n                  year: '1',\n                  value: result[5][i - 1][0]\n                }, {\n                  year: '2',\n                  value: result[5][i - 1][1]\n                }, {\n                  year: '3',\n                  value: result[5][i - 1][2]\n                }, {\n                  year: '4',\n                  value: result[5][i - 1][3]\n                }, {\n                  year: '5',\n                  value: result[5][i - 1][4]\n                }, {\n                  year: '6',\n                  value: result[5][i - 1][5]\n                }, {\n                  year: '7',\n                  value: result[5][i - 1][6]\n                }, {\n                  year: '8',\n                  value: result[5][i - 1][7]\n                }, {\n                  year: '9',\n                  value: result[5][i - 1][8]\n                }, {\n                  year: '9',\n                  value: result[5][i - 1][9]\n                }];\n                const chart = new Chart({\n                  container: `C${i}`,\n                  autoFit: true,\n                  height: 100\n                });\n                chart.data(data);\n                chart.tooltip({\n                  showMarkers: false\n                });\n                chart.interval().position('year*value');\n                chart.interaction('element-active');\n                chart.render();\n              }\n            }\n          }\n        }, 0);\n      });\n    };\n\n    this.showColumn = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ColumnGroup, {\n          title: \"\\u5F85\\u5F52\\u56E0\\u4E8B\\u4EF6\",\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            title: \"\\u89E6\\u70B9\\u4E8B\\u4EF6\",\n            dataIndex: \"touchEvents\"\n          }, \"touchEvents\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ColumnGroup, {\n          title: \"\\u70B9\\u51FB\\u89C4\\u6A21\",\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            title: \"\\u603B\\u70B9\\u51FB\\u6570\",\n            dataIndex: \"totalClicks\"\n          }, \"totalClicks\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"\\u6709\\u6548\\u70B9\\u51FB\\u7387\",\n            dataIndex: \"clickRate\"\n          }, \"clickRate\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ColumnGroup, {\n          title: \"\\u8F6C\\u5316\\u5206\\u5E03\",\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            title: \"\\u8F6C\\u5316\\u65F6\\u957F\\u5206\\u5E03\",\n            dataIndex: \"durationDistr\"\n          }, \"durationDistr\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"\\u8F6C\\u5316\\u6B65\\u957F\\u5206\\u5E03\",\n            dataIndex: \"stepLengthDistr\"\n          }, \"stepLengthDistr\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ColumnGroup, {\n          title: \"\\u76EE\\u6807\\u8F6C\\u5316\",\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            title: \"\\u5B9E\\u73B0\\u4EF7\\u503C\",\n            dataIndex: \"valueRealization\"\n          }, \"valueRealization\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"\\u8D21\\u732E\\u7387\",\n            dataIndex: \"contributionRate\"\n          }, \"contributionRate\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.state = {\n      data: [// {\n        //     key: '1',\n        //     touchEvents: 'John',\n        //     totalClicks: 'Brown',\n        //     clickRate: 32,\n        //     durationDistr: '',\n        //     stepLengthDistr: ['nice', 'developer'],\n        //     valueRealization: 'valueRealization',\n        //     contributionRate: 'contributionRate'\n        // }\n      ]\n    };\n  } //返回结果数据渲染到页面\n\n\n  // 组件销毁前移除事件监听\n  componentWillUnmount() {\n    emitter.removeListener(this.eventEmitter);\n  }\n\n  componentDidUpdata() {}\n\n  render() {\n    const result = this.props.resultData;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        dataSource: this.state.data,\n        className: \"reasult\",\n        pagination: {\n          position: ['bottomCenter'],\n          pageSize: 10,\n          // 只有一页是不显示分页按钮\n          hideOnSinglePage: true,\n          onChange: function (page) {\n            setTimeout(function () {\n              if (result[0] != '' && result[0] !== undefined && result != '') {\n                if (result[0].length <= 10) {\n                  //转化时长分布\n                  for (let i = (page - 1) * 10 + 1; i <= result[0].length; i++) {\n                    const data = [{\n                      year: '1',\n                      value: result[4][i - 1][0]\n                    }, {\n                      year: '2',\n                      value: result[4][i - 1][1]\n                    }, {\n                      year: '3',\n                      value: result[4][i - 1][2]\n                    }, {\n                      year: '4',\n                      value: result[4][i - 1][3]\n                    }, {\n                      year: '5',\n                      value: result[4][i - 1][4]\n                    }, {\n                      year: '6',\n                      value: result[4][i - 1][5]\n                    }, {\n                      year: '7',\n                      value: result[4][i - 1][6]\n                    }, {\n                      year: '8',\n                      value: result[4][i - 1][7]\n                    }, {\n                      year: '9',\n                      value: result[4][i - 1][8]\n                    }, {\n                      year: '9',\n                      value: result[4][i - 1][9]\n                    }];\n                    const chart = new Chart({\n                      container: `c${i}`,\n                      autoFit: true,\n                      height: 100\n                    });\n                    chart.data(data);\n                    chart.tooltip({\n                      showMarkers: false\n                    });\n                    chart.interval().position('year*value');\n                    chart.interaction('element-active');\n                    chart.render();\n                  } //转化步长分布\n\n\n                  for (let i = (page - 1) * 10 + 1; i <= result[0].length; i++) {\n                    const data = [{\n                      year: '1',\n                      value: result[5][i - 1][0]\n                    }, {\n                      year: '2',\n                      value: result[5][i - 1][1]\n                    }, {\n                      year: '3',\n                      value: result[5][i - 1][2]\n                    }, {\n                      year: '4',\n                      value: result[5][i - 1][3]\n                    }, {\n                      year: '5',\n                      value: result[5][i - 1][4]\n                    }, {\n                      year: '6',\n                      value: result[5][i - 1][5]\n                    }, {\n                      year: '7',\n                      value: result[5][i - 1][6]\n                    }, {\n                      year: '8',\n                      value: result[5][i - 1][7]\n                    }, {\n                      year: '9',\n                      value: result[5][i - 1][8]\n                    }, {\n                      year: '9',\n                      value: result[5][i - 1][9]\n                    }];\n                    const chart = new Chart({\n                      container: `C${i}`,\n                      autoFit: true,\n                      height: 100\n                    });\n                    chart.data(data);\n                    chart.tooltip({\n                      showMarkers: false\n                    });\n                    chart.interval().position('year*value');\n                    chart.interaction('element-active');\n                    chart.render();\n                  }\n                } else if (result[0] > 10) {\n                  let theOther = result[0].length % 10;\n                  let pageNumber = result[0].length / 10; //转化时长分布\n\n                  for (let i = (page - 1) * 10 + 1; i <= page * 10; i++) {\n                    const data = [{\n                      year: '1',\n                      value: result[4][i - 1][0]\n                    }, {\n                      year: '2',\n                      value: result[4][i - 1][1]\n                    }, {\n                      year: '3',\n                      value: result[4][i - 1][2]\n                    }, {\n                      year: '4',\n                      value: result[4][i - 1][3]\n                    }, {\n                      year: '5',\n                      value: result[4][i - 1][4]\n                    }, {\n                      year: '6',\n                      value: result[4][i - 1][5]\n                    }, {\n                      year: '7',\n                      value: result[4][i - 1][6]\n                    }, {\n                      year: '8',\n                      value: result[4][i - 1][7]\n                    }, {\n                      year: '9',\n                      value: result[4][i - 1][8]\n                    }, {\n                      year: '9',\n                      value: result[4][i - 1][9]\n                    }];\n                    const chart = new Chart({\n                      container: `c${i}`,\n                      autoFit: true,\n                      height: 100\n                    });\n                    chart.data(data);\n                    chart.tooltip({\n                      showMarkers: false\n                    });\n                    chart.interval().position('year*value');\n                    chart.interaction('element-active');\n                    chart.render();\n                  } //转化步长分布\n\n\n                  for (let i = (page - 1) * 10 + 1; i <= page * 10; i++) {\n                    const data = [{\n                      year: '1',\n                      value: result[5][i - 1][0]\n                    }, {\n                      year: '2',\n                      value: result[5][i - 1][1]\n                    }, {\n                      year: '3',\n                      value: result[5][i - 1][2]\n                    }, {\n                      year: '4',\n                      value: result[5][i - 1][3]\n                    }, {\n                      year: '5',\n                      value: result[5][i - 1][4]\n                    }, {\n                      year: '6',\n                      value: result[5][i - 1][5]\n                    }, {\n                      year: '7',\n                      value: result[5][i - 1][6]\n                    }, {\n                      year: '8',\n                      value: result[5][i - 1][7]\n                    }, {\n                      year: '9',\n                      value: result[5][i - 1][8]\n                    }, {\n                      year: '9',\n                      value: result[5][i - 1][9]\n                    }];\n                    const chart = new Chart({\n                      container: `C${i}`,\n                      autoFit: true,\n                      height: 100\n                    });\n                    chart.data(data);\n                    chart.tooltip({\n                      showMarkers: false\n                    });\n                    chart.interval().position('year*value');\n                    chart.interaction('element-active');\n                    chart.render();\n                  }\n                }\n              }\n            }, 0);\n          }\n        },\n        scroll: {\n          y: 290\n        },\n        tableLayout: \"fixed\",\n        style: {\n          minWidth: 700\n        },\n        children: this.showColumn()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ReasultShow;","map":{"version":3,"sources":["D:/code/g-project/src/components/Footer/ResultShow/index.js"],"names":["React","Component","Fragment","Chart","emitter","Table","Column","ColumnGroup","ReasultShow","constructor","props","componentDidMount","eventEmitter","addListener","console","log","update","data","result","resultData","undefined","i","length","push","key","touchEvents","totalClicks","clickRate","durationDistr","stepLengthDistr","valueRealization","contributionRate","bind","setState","setTimeout","year","value","chart","container","autoFit","height","width","tooltip","showMarkers","interval","position","interaction","render","showColumn","state","componentWillUnmount","removeListener","componentDidUpdata","pageSize","hideOnSinglePage","onChange","page","theOther","pageNumber","y","minWidth"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Chart } from '@antv/g2';\r\nimport emitter from \"../../../event\";\r\n//引入组件\r\nimport { Table } from 'antd';\r\n//引入css文件\r\nimport './style.css';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nclass ReasultShow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                // {\r\n                //     key: '1',\r\n                //     touchEvents: 'John',\r\n                //     totalClicks: 'Brown',\r\n                //     clickRate: 32,\r\n                //     durationDistr: '',\r\n                //     stepLengthDistr: ['nice', 'developer'],\r\n                //     valueRealization: 'valueRealization',\r\n                //     contributionRate: 'contributionRate'\r\n                // }\r\n            ]\r\n        }\r\n    }\r\n\r\n    //返回结果数据渲染到页面\r\n    componentDidMount = () => {\r\n        this.eventEmitter = emitter.addListener(\"callMe\", () => {\r\n            console.log(\"发射器被启动，数据发送到了页面组件中\")\r\n            let update = function () {\r\n                let data = [];\r\n                let result = this.props.resultData\r\n                if (result[0] != '' && result[0] !== undefined && result != '') {\r\n                    for (let i = 1; i <= result[0].length; i++) {\r\n                        data.push({\r\n                            key: i,\r\n                            touchEvents: `${result[0][i - 1][1]} (${result[0][i - 1][0]})`,\r\n                            totalClicks: result[1][i - 1],\r\n                            clickRate: `${result[2][i - 1]} (${result[3][i - 1] * 100 + '%'})`,\r\n                            durationDistr: <div id={`c${i}`} ></div>,\r\n                            stepLengthDistr: <div id={`C${i}`} ></div>,\r\n                            // durationDistr: result[4][i-1],\r\n                            // stepLengthDistr: result[5][i-1],\r\n                            valueRealization: result[6][i - 1],\r\n                            contributionRate: result[7][i - 1]\r\n                        }\r\n                        )\r\n                    }\r\n                }\r\n                return data\r\n            }\r\n            update = update.bind(this)\r\n            let data = update();\r\n            this.setState({\r\n                data\r\n            })\r\n\r\n            setTimeout(() => {\r\n                console.log('直方图的第一次渲染')\r\n                const result = this.props.resultData\r\n                if (result[0] != '' && result[0] !== undefined && result != '') {\r\n                    if (result[0].length < 10) {\r\n                        //转换时长\r\n                        for (let i = 1; i <= result[0].length; i++) {\r\n                            const data = [\r\n                                { year: '1', value: result[4][i - 1][0] },\r\n                                { year: '2', value: result[4][i - 1][1] },\r\n                                { year: '3', value: result[4][i - 1][2] },\r\n                                { year: '4', value: result[4][i - 1][3] },\r\n                                { year: '5', value: result[4][i - 1][4] },\r\n                                { year: '6', value: result[4][i - 1][5] },\r\n                                { year: '7', value: result[4][i - 1][6] },\r\n                                { year: '8', value: result[4][i - 1][7] },\r\n                                { year: '9', value: result[4][i - 1][8] },\r\n                                { year: '9', value: result[4][i - 1][9] }\r\n                            ];\r\n                            const chart = new Chart({\r\n                                container: `c${i}`,\r\n                                autoFit: true,\r\n                                height: 100,\r\n                                width: 10\r\n                            });\r\n\r\n                            chart.data(data);\r\n\r\n                            chart.tooltip({\r\n                                showMarkers: false,\r\n                            });\r\n\r\n                            chart.interval().position('year*value');\r\n\r\n                            chart.interaction('element-active');\r\n\r\n                            chart.render();\r\n                        }\r\n                        //转化步长\r\n                        for (let i = 1; i <= result[0].length; i++) {\r\n                            const data = [\r\n                                { year: '1', value: result[5][i - 1][0] },\r\n                                { year: '2', value: result[5][i - 1][1] },\r\n                                { year: '3', value: result[5][i - 1][2] },\r\n                                { year: '4', value: result[5][i - 1][3] },\r\n                                { year: '5', value: result[5][i - 1][4] },\r\n                                { year: '6', value: result[5][i - 1][5] },\r\n                                { year: '7', value: result[5][i - 1][6] },\r\n                                { year: '8', value: result[5][i - 1][7] },\r\n                                { year: '9', value: result[5][i - 1][8] },\r\n                                { year: '9', value: result[5][i - 1][9] }\r\n                            ];\r\n                            const chart = new Chart({\r\n                                container: `C${i}`,\r\n                                autoFit: true,\r\n                                height: 100,\r\n                            });\r\n\r\n                            chart.data(data);\r\n\r\n                            chart.tooltip({\r\n                                showMarkers: false,\r\n                            });\r\n\r\n                            chart.interval().position('year*value');\r\n\r\n                            chart.interaction('element-active');\r\n\r\n                            chart.render();\r\n                        }\r\n                    } else if (result[0].length >= 10) {\r\n                        //转换时长\r\n                        for (let i = 1; i <= 10; i++) {\r\n                            const data = [\r\n                                { year: '1', value: result[4][i - 1][0] },\r\n                                { year: '2', value: result[4][i - 1][1] },\r\n                                { year: '3', value: result[4][i - 1][2] },\r\n                                { year: '4', value: result[4][i - 1][3] },\r\n                                { year: '5', value: result[4][i - 1][4] },\r\n                                { year: '6', value: result[4][i - 1][5] },\r\n                                { year: '7', value: result[4][i - 1][6] },\r\n                                { year: '8', value: result[4][i - 1][7] },\r\n                                { year: '9', value: result[4][i - 1][8] },\r\n                                { year: '9', value: result[4][i - 1][9] }\r\n                            ];\r\n                            const chart = new Chart({\r\n                                container: `c${i}`,\r\n                                autoFit: true,\r\n                                height: 100,\r\n                                width: 10\r\n                            });\r\n\r\n                            chart.data(data);\r\n\r\n                            chart.tooltip({\r\n                                showMarkers: false,\r\n                            });\r\n\r\n                            chart.interval().position('year*value');\r\n\r\n                            chart.interaction('element-active');\r\n\r\n                            chart.render();\r\n                        }\r\n                        //转化步长\r\n                        for (let i = 1; i <= 10; i++) {\r\n                            const data = [\r\n                                { year: '1', value: result[5][i - 1][0] },\r\n                                { year: '2', value: result[5][i - 1][1] },\r\n                                { year: '3', value: result[5][i - 1][2] },\r\n                                { year: '4', value: result[5][i - 1][3] },\r\n                                { year: '5', value: result[5][i - 1][4] },\r\n                                { year: '6', value: result[5][i - 1][5] },\r\n                                { year: '7', value: result[5][i - 1][6] },\r\n                                { year: '8', value: result[5][i - 1][7] },\r\n                                { year: '9', value: result[5][i - 1][8] },\r\n                                { year: '9', value: result[5][i - 1][9] }\r\n                            ];\r\n                            const chart = new Chart({\r\n                                container: `C${i}`,\r\n                                autoFit: true,\r\n                                height: 100,\r\n                            });\r\n\r\n                            chart.data(data);\r\n\r\n                            chart.tooltip({\r\n                                showMarkers: false,\r\n                            });\r\n\r\n                            chart.interval().position('year*value');\r\n\r\n                            chart.interaction('element-active');\r\n\r\n                            chart.render();\r\n                        }\r\n                    }\r\n                }\r\n            }, 0);\r\n        })\r\n    }\r\n\r\n    // 组件销毁前移除事件监听\r\n    componentWillUnmount() {\r\n        emitter.removeListener(this.eventEmitter);\r\n    }\r\n\r\n    componentDidUpdata() {\r\n    }\r\n\r\n    showColumn = () => {\r\n        return (\r\n            <>\r\n                <ColumnGroup title=\"待归因事件\">\r\n                    <Column title=\"触点事件\" dataIndex=\"touchEvents\" key=\"touchEvents\" />\r\n                </ColumnGroup>\r\n                <ColumnGroup title=\"点击规模\">\r\n                    <Column title=\"总点击数\" dataIndex=\"totalClicks\" key=\"totalClicks\" />\r\n                    <Column title=\"有效点击率\" dataIndex=\"clickRate\" key=\"clickRate\" />\r\n                </ColumnGroup>\r\n                <ColumnGroup title=\"转化分布\">\r\n                    <Column title=\"转化时长分布\" dataIndex=\"durationDistr\" key=\"durationDistr\" />\r\n                    <Column title=\"转化步长分布\" dataIndex=\"stepLengthDistr\" key=\"stepLengthDistr\" />\r\n                </ColumnGroup>\r\n                <ColumnGroup title=\"目标转化\">\r\n                    <Column title=\"实现价值\" dataIndex=\"valueRealization\" key=\"valueRealization\" />\r\n                    <Column title=\"贡献率\" dataIndex=\"contributionRate\" key=\"contributionRate\" />\r\n                </ColumnGroup>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        const result = this.props.resultData\r\n        return (\r\n            <Fragment>\r\n                <Table\r\n                    bordered={true}\r\n                    dataSource={this.state.data}\r\n                    className='reasult'\r\n                    pagination={{\r\n                        position: ['bottomCenter'],\r\n                        pageSize: 10,\r\n                        // 只有一页是不显示分页按钮\r\n                        hideOnSinglePage: true,\r\n                        onChange: function (page) {\r\n                            setTimeout(function () {\r\n                                if (result[0] != '' && result[0] !== undefined && result != '') {\r\n                                    if (result[0].length <= 10) {\r\n                                        //转化时长分布\r\n                                        for (let i = (page - 1) * 10 + 1; i <= result[0].length; i++) {\r\n                                            const data = [\r\n                                                { year: '1', value: result[4][i - 1][0] },\r\n                                                { year: '2', value: result[4][i - 1][1] },\r\n                                                { year: '3', value: result[4][i - 1][2] },\r\n                                                { year: '4', value: result[4][i - 1][3] },\r\n                                                { year: '5', value: result[4][i - 1][4] },\r\n                                                { year: '6', value: result[4][i - 1][5] },\r\n                                                { year: '7', value: result[4][i - 1][6] },\r\n                                                { year: '8', value: result[4][i - 1][7] },\r\n                                                { year: '9', value: result[4][i - 1][8] },\r\n                                                { year: '9', value: result[4][i - 1][9] }\r\n                                            ];\r\n                                            const chart = new Chart({\r\n                                                container: `c${i}`,\r\n                                                autoFit: true,\r\n                                                height: 100,\r\n                                            });\r\n\r\n                                            chart.data(data);\r\n\r\n                                            chart.tooltip({\r\n                                                showMarkers: false,\r\n                                            });\r\n\r\n                                            chart.interval().position('year*value');\r\n\r\n                                            chart.interaction('element-active');\r\n\r\n                                            chart.render();\r\n\r\n                                        }\r\n                                        //转化步长分布\r\n                                        for (let i = (page - 1) * 10 + 1; i <= result[0].length; i++) {\r\n                                            const data = [\r\n                                                { year: '1', value: result[5][i - 1][0] },\r\n                                                { year: '2', value: result[5][i - 1][1] },\r\n                                                { year: '3', value: result[5][i - 1][2] },\r\n                                                { year: '4', value: result[5][i - 1][3] },\r\n                                                { year: '5', value: result[5][i - 1][4] },\r\n                                                { year: '6', value: result[5][i - 1][5] },\r\n                                                { year: '7', value: result[5][i - 1][6] },\r\n                                                { year: '8', value: result[5][i - 1][7] },\r\n                                                { year: '9', value: result[5][i - 1][8] },\r\n                                                { year: '9', value: result[5][i - 1][9] }\r\n                                            ];\r\n                                            const chart = new Chart({\r\n                                                container: `C${i}`,\r\n                                                autoFit: true,\r\n                                                height: 100,\r\n                                            });\r\n\r\n                                            chart.data(data);\r\n\r\n                                            chart.tooltip({\r\n                                                showMarkers: false,\r\n                                            });\r\n\r\n                                            chart.interval().position('year*value');\r\n\r\n                                            chart.interaction('element-active');\r\n\r\n                                            chart.render();\r\n\r\n                                        }\r\n                                    } else if (result[0] > 10) {\r\n                                        let theOther = result[0].length % 10\r\n                                        let pageNumber = result[0].length / 10\r\n                                        //转化时长分布\r\n                                        for (let i = (page - 1) * 10 + 1; i <= page * 10; i++) {\r\n                                            const data = [\r\n                                                { year: '1', value: result[4][i - 1][0] },\r\n                                                { year: '2', value: result[4][i - 1][1] },\r\n                                                { year: '3', value: result[4][i - 1][2] },\r\n                                                { year: '4', value: result[4][i - 1][3] },\r\n                                                { year: '5', value: result[4][i - 1][4] },\r\n                                                { year: '6', value: result[4][i - 1][5] },\r\n                                                { year: '7', value: result[4][i - 1][6] },\r\n                                                { year: '8', value: result[4][i - 1][7] },\r\n                                                { year: '9', value: result[4][i - 1][8] },\r\n                                                { year: '9', value: result[4][i - 1][9] }\r\n                                            ];\r\n                                            const chart = new Chart({\r\n                                                container: `c${i}`,\r\n                                                autoFit: true,\r\n                                                height: 100,\r\n                                            });\r\n\r\n                                            chart.data(data);\r\n\r\n                                            chart.tooltip({\r\n                                                showMarkers: false,\r\n                                            });\r\n\r\n                                            chart.interval().position('year*value');\r\n\r\n                                            chart.interaction('element-active');\r\n\r\n                                            chart.render();\r\n\r\n                                        }\r\n                                        //转化步长分布\r\n                                        for (let i = (page - 1) * 10 + 1; i <= page * 10; i++) {\r\n                                            const data = [\r\n                                                { year: '1', value: result[5][i - 1][0] },\r\n                                                { year: '2', value: result[5][i - 1][1] },\r\n                                                { year: '3', value: result[5][i - 1][2] },\r\n                                                { year: '4', value: result[5][i - 1][3] },\r\n                                                { year: '5', value: result[5][i - 1][4] },\r\n                                                { year: '6', value: result[5][i - 1][5] },\r\n                                                { year: '7', value: result[5][i - 1][6] },\r\n                                                { year: '8', value: result[5][i - 1][7] },\r\n                                                { year: '9', value: result[5][i - 1][8] },\r\n                                                { year: '9', value: result[5][i - 1][9] }\r\n                                            ];\r\n                                            const chart = new Chart({\r\n                                                container: `C${i}`,\r\n                                                autoFit: true,\r\n                                                height: 100,\r\n                                            });\r\n\r\n                                            chart.data(data);\r\n\r\n                                            chart.tooltip({\r\n                                                showMarkers: false,\r\n                                            });\r\n\r\n                                            chart.interval().position('year*value');\r\n\r\n                                            chart.interaction('element-active');\r\n\r\n                                            chart.render();\r\n\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }, 0)\r\n                        }\r\n\r\n                    }}\r\n                    scroll={{\r\n                        y: 290\r\n                    }}\r\n                    tableLayout='fixed'\r\n                    style={{ minWidth: 700 }}\r\n                >\r\n                    {this.showColumn()}\r\n                </Table>\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReasultShow;"]},"metadata":{},"sourceType":"module"}