{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\g-project\\\\src\\\\components\\\\Footer\\\\ResultShow\\\\index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Chart } from '@antv/g2';\nimport emitter from \"../../../event\"; //引入组件\n\nimport { Table } from 'antd'; //引入css文件\n\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\n\nclass ReasultShow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.eventEmitter = emitter.addListener(\"callMe\", () => {\n        console.log(\"发射器被启动，数据发送到了页面组件中\");\n        let c = Math.random();\n\n        let update = function () {\n          let data = [];\n          let result = this.props.resultData;\n\n          if (typeof result === 'string') {\n            result = eval(`(${result})`);\n          }\n\n          console.log(result);\n          console.log(result[0].length);\n\n          if (result[0] !== '' && result[0] !== undefined && result !== '') {\n            for (let i = 1; i <= result[0].length; i++) {\n              data.push({\n                key: i,\n                touchEvents: `${result[0][i - 1][1]} (${result[0][i - 1][0]})`,\n                totalClicks: result[1][i - 1],\n                clickRate: `${result[2][i - 1]} (${result[3][i - 1] * 100 + '%'})`,\n                durationDistr: /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: `c${i}`,\n                  ref: div => {\n                    this[`divElem${i}`] = div;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 44\n                }, this),\n                stepLengthDistr: /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: `C${i}`,\n                  ref: div => {\n                    this[`DivElem${i}`] = div;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 46\n                }, this),\n                // durationDistr: result[4][i-1],\n                // stepLengthDistr: result[5][i-1],\n                valueRealization: result[6][i - 1],\n                contributionRate: result[7][i - 1]\n              });\n            }\n          }\n\n          return data;\n        };\n\n        update = update.bind(this);\n        let data = update();\n        this.setState({\n          data\n        }); //bug!!!!!\n\n        if (this.divElem1) {\n          if (this.divElem1.innerHTML === '') {\n            let timeout = setTimeout(() => {\n              console.log('直方图的第一次渲染');\n              let result = this.props.resultData;\n\n              if (typeof result === 'string') {\n                result = eval(`(${result})`);\n              }\n\n              console.log(result[0].length);\n\n              if (result[0] !== '' && result[0] !== undefined && result !== '') {\n                if (result[0].length < 10) {\n                  //转换时长\n                  for (let i = 1; i <= result[0].length; i++) {\n                    const data = [{\n                      year: '1',\n                      value: result[4][i - 1][0]\n                    }, {\n                      year: '2',\n                      value: result[4][i - 1][1]\n                    }, {\n                      year: '3',\n                      value: result[4][i - 1][2]\n                    }, {\n                      year: '4',\n                      value: result[4][i - 1][3]\n                    }, {\n                      year: '5',\n                      value: result[4][i - 1][4]\n                    }, {\n                      year: '6',\n                      value: result[4][i - 1][5]\n                    }, {\n                      year: '7',\n                      value: result[4][i - 1][6]\n                    }, {\n                      year: '8',\n                      value: result[4][i - 1][7]\n                    }, {\n                      year: '9',\n                      value: result[4][i - 1][8]\n                    }, {\n                      year: '9',\n                      value: result[4][i - 1][9]\n                    }];\n                    const chart = new Chart({\n                      container: `c${i}`,\n                      autoFit: true,\n                      height: 100,\n                      width: 10\n                    });\n                    chart.data(data);\n                    chart.tooltip({\n                      showMarkers: false\n                    });\n                    chart.interval().position('year*value');\n                    chart.interaction('element-active');\n                    chart.render();\n                  } //转化步长\n\n\n                  for (let i = 1; i <= result[0].length; i++) {\n                    const data = [{\n                      year: '1',\n                      value: result[5][i - 1][0]\n                    }, {\n                      year: '2',\n                      value: result[5][i - 1][1]\n                    }, {\n                      year: '3',\n                      value: result[5][i - 1][2]\n                    }, {\n                      year: '4',\n                      value: result[5][i - 1][3]\n                    }, {\n                      year: '5',\n                      value: result[5][i - 1][4]\n                    }, {\n                      year: '6',\n                      value: result[5][i - 1][5]\n                    }, {\n                      year: '7',\n                      value: result[5][i - 1][6]\n                    }, {\n                      year: '8',\n                      value: result[5][i - 1][7]\n                    }, {\n                      year: '9',\n                      value: result[5][i - 1][8]\n                    }, {\n                      year: '9',\n                      value: result[5][i - 1][9]\n                    }];\n                    const chart = new Chart({\n                      container: `C${i}`,\n                      autoFit: true,\n                      height: 100\n                    });\n                    chart.data(data);\n                    chart.tooltip({\n                      showMarkers: false\n                    });\n                    chart.interval().position('year*value');\n                    chart.interaction('element-active');\n                    chart.render();\n                  }\n                } else if (result[0].length >= 10) {\n                  //转换时长\n                  for (let i = 1; i <= 10; i++) {\n                    const data = [{\n                      year: '1',\n                      value: result[4][i - 1][0]\n                    }, {\n                      year: '2',\n                      value: result[4][i - 1][1]\n                    }, {\n                      year: '3',\n                      value: result[4][i - 1][2]\n                    }, {\n                      year: '4',\n                      value: result[4][i - 1][3]\n                    }, {\n                      year: '5',\n                      value: result[4][i - 1][4]\n                    }, {\n                      year: '6',\n                      value: result[4][i - 1][5]\n                    }, {\n                      year: '7',\n                      value: result[4][i - 1][6]\n                    }, {\n                      year: '8',\n                      value: result[4][i - 1][7]\n                    }, {\n                      year: '9',\n                      value: result[4][i - 1][8]\n                    }, {\n                      year: '9',\n                      value: result[4][i - 1][9]\n                    }];\n                    const chart = new Chart({\n                      container: `c${i}`,\n                      autoFit: true,\n                      height: 100,\n                      width: 10\n                    });\n                    chart.data(data);\n                    chart.tooltip({\n                      showMarkers: false\n                    });\n                    chart.interval().position('year*value');\n                    chart.interaction('element-active');\n                    chart.render();\n                  } //转化步长\n\n\n                  for (let i = 1; i <= 10; i++) {\n                    const data = [{\n                      year: '1',\n                      value: result[5][i - 1][0]\n                    }, {\n                      year: '2',\n                      value: result[5][i - 1][1]\n                    }, {\n                      year: '3',\n                      value: result[5][i - 1][2]\n                    }, {\n                      year: '4',\n                      value: result[5][i - 1][3]\n                    }, {\n                      year: '5',\n                      value: result[5][i - 1][4]\n                    }, {\n                      year: '6',\n                      value: result[5][i - 1][5]\n                    }, {\n                      year: '7',\n                      value: result[5][i - 1][6]\n                    }, {\n                      year: '8',\n                      value: result[5][i - 1][7]\n                    }, {\n                      year: '9',\n                      value: result[5][i - 1][8]\n                    }, {\n                      year: '9',\n                      value: result[5][i - 1][9]\n                    }];\n                    const chart = new Chart({\n                      container: `C${i}`,\n                      autoFit: true,\n                      height: 100\n                    });\n                    chart.data(data);\n                    chart.tooltip({\n                      showMarkers: false\n                    });\n                    chart.interval().position('year*value');\n                    chart.interaction('element-active');\n                    chart.render();\n                  }\n                }\n              }\n\n              clearTimeout(timeout);\n            }, 0);\n          }\n        }\n      });\n    };\n\n    this.showColumn = () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ColumnGroup, {\n          title: \"\\u5F85\\u5F52\\u56E0\\u4E8B\\u4EF6\",\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            title: \"\\u89E6\\u70B9\\u4E8B\\u4EF6\",\n            dataIndex: \"touchEvents\"\n          }, \"touchEvents\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ColumnGroup, {\n          title: \"\\u70B9\\u51FB\\u89C4\\u6A21\",\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            title: \"\\u603B\\u70B9\\u51FB\\u6570\",\n            dataIndex: \"totalClicks\"\n          }, \"totalClicks\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"\\u6709\\u6548\\u70B9\\u51FB\\u7387\",\n            dataIndex: \"clickRate\"\n          }, \"clickRate\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ColumnGroup, {\n          title: \"\\u8F6C\\u5316\\u5206\\u5E03\",\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            title: \"\\u8F6C\\u5316\\u65F6\\u957F\\u5206\\u5E03\",\n            dataIndex: \"durationDistr\"\n          }, \"durationDistr\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"\\u8F6C\\u5316\\u6B65\\u957F\\u5206\\u5E03\",\n            dataIndex: \"stepLengthDistr\"\n          }, \"stepLengthDistr\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ColumnGroup, {\n          title: \"\\u76EE\\u6807\\u8F6C\\u5316\",\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            title: \"\\u5B9E\\u73B0\\u4EF7\\u503C\",\n            dataIndex: \"valueRealization\"\n          }, \"valueRealization\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"\\u8D21\\u732E\\u7387\",\n            dataIndex: \"contributionRate\"\n          }, \"contributionRate\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.state = {\n      data: [// {\n        //     key: '1',\n        //     touchEvents: 'John',\n        //     totalClicks: 'Brown',\n        //     clickRate: 32,\n        //     durationDistr: '',\n        //     stepLengthDistr: ['nice', 'developer'],\n        //     valueRealization: 'valueRealization',\n        //     contributionRate: 'contributionRate'\n        // }\n      ]\n    };\n  } //返回结果数据渲染到页面\n\n\n  componentDidUpdata() {}\n\n  render() {\n    const result = this.props.resultData;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        dataSource: this.state.data,\n        className: \"reasult\",\n        pagination: {\n          position: ['bottomCenter'],\n          pageSize: 10,\n          // 只有一页是不显示分页按钮\n          hideOnSinglePage: true,\n          onChange: function (page) {\n            let timeout = setTimeout(function () {\n              if (result[0] !== '' && result[0] !== undefined && result !== '') {\n                if (result[0].length <= 10) {\n                  //转化时长分布\n                  for (let i = (page - 1) * 10 + 1; i <= result[0].length; i++) {\n                    const data = [{\n                      year: '1',\n                      value: result[4][i - 1][0]\n                    }, {\n                      year: '2',\n                      value: result[4][i - 1][1]\n                    }, {\n                      year: '3',\n                      value: result[4][i - 1][2]\n                    }, {\n                      year: '4',\n                      value: result[4][i - 1][3]\n                    }, {\n                      year: '5',\n                      value: result[4][i - 1][4]\n                    }, {\n                      year: '6',\n                      value: result[4][i - 1][5]\n                    }, {\n                      year: '7',\n                      value: result[4][i - 1][6]\n                    }, {\n                      year: '8',\n                      value: result[4][i - 1][7]\n                    }, {\n                      year: '9',\n                      value: result[4][i - 1][8]\n                    }, {\n                      year: '9',\n                      value: result[4][i - 1][9]\n                    }];\n                    const chart = new Chart({\n                      container: `c${i}`,\n                      autoFit: true,\n                      height: 100\n                    });\n                    chart.data(data);\n                    chart.tooltip({\n                      showMarkers: false\n                    });\n                    chart.interval().position('year*value');\n                    chart.interaction('element-active');\n                    chart.render();\n                  } //转化步长分布\n\n\n                  for (let i = (page - 1) * 10 + 1; i <= result[0].length; i++) {\n                    const data = [{\n                      year: '1',\n                      value: result[5][i - 1][0]\n                    }, {\n                      year: '2',\n                      value: result[5][i - 1][1]\n                    }, {\n                      year: '3',\n                      value: result[5][i - 1][2]\n                    }, {\n                      year: '4',\n                      value: result[5][i - 1][3]\n                    }, {\n                      year: '5',\n                      value: result[5][i - 1][4]\n                    }, {\n                      year: '6',\n                      value: result[5][i - 1][5]\n                    }, {\n                      year: '7',\n                      value: result[5][i - 1][6]\n                    }, {\n                      year: '8',\n                      value: result[5][i - 1][7]\n                    }, {\n                      year: '9',\n                      value: result[5][i - 1][8]\n                    }, {\n                      year: '9',\n                      value: result[5][i - 1][9]\n                    }];\n                    const chart = new Chart({\n                      container: `C${i}`,\n                      autoFit: true,\n                      height: 100\n                    });\n                    chart.data(data);\n                    chart.tooltip({\n                      showMarkers: false\n                    });\n                    chart.interval().position('year*value');\n                    chart.interaction('element-active');\n                    chart.render();\n                  }\n                } else if (result[0].length > 10) {\n                  let theOther = result[0].length % 10;\n                  let pageTotalNumber = parseInt(result[0].length / 10);\n\n                  if (page <= pageTotalNumber) {\n                    //转化时长分布\n                    for (let i = (page - 1) * 10 + 1; i <= page * 10; i++) {\n                      const data = [{\n                        year: '1',\n                        value: result[4][i - 1][0]\n                      }, {\n                        year: '2',\n                        value: result[4][i - 1][1]\n                      }, {\n                        year: '3',\n                        value: result[4][i - 1][2]\n                      }, {\n                        year: '4',\n                        value: result[4][i - 1][3]\n                      }, {\n                        year: '5',\n                        value: result[4][i - 1][4]\n                      }, {\n                        year: '6',\n                        value: result[4][i - 1][5]\n                      }, {\n                        year: '7',\n                        value: result[4][i - 1][6]\n                      }, {\n                        year: '8',\n                        value: result[4][i - 1][7]\n                      }, {\n                        year: '9',\n                        value: result[4][i - 1][8]\n                      }, {\n                        year: '9',\n                        value: result[4][i - 1][9]\n                      }];\n                      const chart = new Chart({\n                        container: `c${i}`,\n                        autoFit: true,\n                        height: 100\n                      });\n                      chart.data(data);\n                      chart.tooltip({\n                        showMarkers: false\n                      });\n                      chart.interval().position('year*value');\n                      chart.interaction('element-active');\n                      chart.render();\n                    } //转化步长分布\n\n\n                    for (let i = (page - 1) * 10 + 1; i <= page * 10; i++) {\n                      const data = [{\n                        year: '1',\n                        value: result[5][i - 1][0]\n                      }, {\n                        year: '2',\n                        value: result[5][i - 1][1]\n                      }, {\n                        year: '3',\n                        value: result[5][i - 1][2]\n                      }, {\n                        year: '4',\n                        value: result[5][i - 1][3]\n                      }, {\n                        year: '5',\n                        value: result[5][i - 1][4]\n                      }, {\n                        year: '6',\n                        value: result[5][i - 1][5]\n                      }, {\n                        year: '7',\n                        value: result[5][i - 1][6]\n                      }, {\n                        year: '8',\n                        value: result[5][i - 1][7]\n                      }, {\n                        year: '9',\n                        value: result[5][i - 1][8]\n                      }, {\n                        year: '9',\n                        value: result[5][i - 1][9]\n                      }];\n                      const chart = new Chart({\n                        container: `C${i}`,\n                        autoFit: true,\n                        height: 100\n                      });\n                      chart.data(data);\n                      chart.tooltip({\n                        showMarkers: false\n                      });\n                      chart.interval().position('year*value');\n                      chart.interaction('element-active');\n                      chart.render();\n                    }\n                  } else if (page === pageTotalNumber + 1) {\n                    //转化时长分布\n                    for (let i = (page - 1) * 10 + 1; i <= (page - 1) * 10 + theOther; i++) {\n                      const data = [{\n                        year: '1',\n                        value: result[4][i - 1][0]\n                      }, {\n                        year: '2',\n                        value: result[4][i - 1][1]\n                      }, {\n                        year: '3',\n                        value: result[4][i - 1][2]\n                      }, {\n                        year: '4',\n                        value: result[4][i - 1][3]\n                      }, {\n                        year: '5',\n                        value: result[4][i - 1][4]\n                      }, {\n                        year: '6',\n                        value: result[4][i - 1][5]\n                      }, {\n                        year: '7',\n                        value: result[4][i - 1][6]\n                      }, {\n                        year: '8',\n                        value: result[4][i - 1][7]\n                      }, {\n                        year: '9',\n                        value: result[4][i - 1][8]\n                      }, {\n                        year: '9',\n                        value: result[4][i - 1][9]\n                      }];\n                      const chart = new Chart({\n                        container: `c${i}`,\n                        autoFit: true,\n                        height: 100\n                      });\n                      chart.data(data);\n                      chart.tooltip({\n                        showMarkers: false\n                      });\n                      chart.interval().position('year*value');\n                      chart.interaction('element-active');\n                      chart.render();\n                    } //转化步长分布\n\n\n                    for (let i = (page - 1) * 10 + 1; i <= (page - 1) * 10 + theOther; i++) {\n                      const data = [{\n                        year: '1',\n                        value: result[5][i - 1][0]\n                      }, {\n                        year: '2',\n                        value: result[5][i - 1][1]\n                      }, {\n                        year: '3',\n                        value: result[5][i - 1][2]\n                      }, {\n                        year: '4',\n                        value: result[5][i - 1][3]\n                      }, {\n                        year: '5',\n                        value: result[5][i - 1][4]\n                      }, {\n                        year: '6',\n                        value: result[5][i - 1][5]\n                      }, {\n                        year: '7',\n                        value: result[5][i - 1][6]\n                      }, {\n                        year: '8',\n                        value: result[5][i - 1][7]\n                      }, {\n                        year: '9',\n                        value: result[5][i - 1][8]\n                      }, {\n                        year: '9',\n                        value: result[5][i - 1][9]\n                      }];\n                      const chart = new Chart({\n                        container: `C${i}`,\n                        autoFit: true,\n                        height: 100\n                      });\n                      chart.data(data);\n                      chart.tooltip({\n                        showMarkers: false\n                      });\n                      chart.interval().position('year*value');\n                      chart.interaction('element-active');\n                      chart.render();\n                    }\n                  }\n                }\n              }\n\n              clearTimeout(timeout);\n            }, 0);\n          }\n        },\n        scroll: {\n          y: 290\n        },\n        tableLayout: \"fixed\",\n        style: {\n          minWidth: 700\n        },\n        children: this.showColumn()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ReasultShow;","map":{"version":3,"sources":["D:/code/g-project/src/components/Footer/ResultShow/index.js"],"names":["React","Component","Fragment","Chart","emitter","Table","Column","ColumnGroup","ReasultShow","constructor","props","componentDidMount","eventEmitter","addListener","console","log","c","Math","random","update","data","result","resultData","eval","length","undefined","i","push","key","touchEvents","totalClicks","clickRate","durationDistr","div","stepLengthDistr","valueRealization","contributionRate","bind","setState","divElem1","innerHTML","timeout","setTimeout","year","value","chart","container","autoFit","height","width","tooltip","showMarkers","interval","position","interaction","render","clearTimeout","showColumn","state","componentDidUpdata","pageSize","hideOnSinglePage","onChange","page","theOther","pageTotalNumber","parseInt","y","minWidth"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Chart } from '@antv/g2';\r\nimport emitter from \"../../../event\";\r\n//引入组件\r\nimport { Table } from 'antd';\r\n//引入css文件\r\nimport './style.css';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nclass ReasultShow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                // {\r\n                //     key: '1',\r\n                //     touchEvents: 'John',\r\n                //     totalClicks: 'Brown',\r\n                //     clickRate: 32,\r\n                //     durationDistr: '',\r\n                //     stepLengthDistr: ['nice', 'developer'],\r\n                //     valueRealization: 'valueRealization',\r\n                //     contributionRate: 'contributionRate'\r\n                // }\r\n            ]\r\n        }\r\n    }\r\n\r\n    //返回结果数据渲染到页面\r\n    componentDidMount = () => {\r\n        this.eventEmitter = emitter.addListener(\"callMe\", () => {\r\n            console.log(\"发射器被启动，数据发送到了页面组件中\")\r\n            let c = Math.random()\r\n            let update = function () {\r\n                let data = [];\r\n                let result = this.props.resultData\r\n                if (typeof (result) === 'string') {\r\n                    result = eval(`(${result})`)\r\n                }\r\n                console.log(result)\r\n                console.log(result[0].length)\r\n                if (result[0] !== '' && result[0] !== undefined && result !== '') {\r\n                    for (let i = 1; i <= result[0].length; i++) {\r\n                        data.push({\r\n                            key: i,\r\n                            touchEvents: `${result[0][i - 1][1]} (${result[0][i - 1][0]})`,\r\n                            totalClicks: result[1][i - 1],\r\n                            clickRate: `${result[2][i - 1]} (${result[3][i - 1] * 100 + '%'})`,\r\n                            durationDistr: <div id={`c${i}`} ref={(div) => { this[`divElem${i}`] = div }}></div>,\r\n                            stepLengthDistr: <div id={`C${i}`} ref={(div) => { this[`DivElem${i}`] = div }}></div>,\r\n                            // durationDistr: result[4][i-1],\r\n                            // stepLengthDistr: result[5][i-1],\r\n                            valueRealization: result[6][i - 1],\r\n                            contributionRate: result[7][i - 1]\r\n                        }\r\n                        )\r\n                    }\r\n                }\r\n                return data\r\n            }\r\n            update = update.bind(this)\r\n            let data = update();\r\n            this.setState({\r\n                data\r\n            })\r\n            //bug!!!!!\r\n            if (this.divElem1) {\r\n                if (this.divElem1.innerHTML === '') {\r\n                    let timeout = setTimeout(() => {\r\n                        console.log('直方图的第一次渲染')\r\n                        let result = this.props.resultData\r\n                        if (typeof (result) === 'string') {\r\n                            result = eval(`(${result})`)\r\n                        }\r\n                        console.log(result[0].length)\r\n                        if (result[0] !== '' && result[0] !== undefined && result !== '') {\r\n                            if (result[0].length < 10) {\r\n                                //转换时长\r\n                                for (let i = 1; i <= result[0].length; i++) {\r\n                                    const data = [\r\n                                        { year: '1', value: result[4][i - 1][0] },\r\n                                        { year: '2', value: result[4][i - 1][1] },\r\n                                        { year: '3', value: result[4][i - 1][2] },\r\n                                        { year: '4', value: result[4][i - 1][3] },\r\n                                        { year: '5', value: result[4][i - 1][4] },\r\n                                        { year: '6', value: result[4][i - 1][5] },\r\n                                        { year: '7', value: result[4][i - 1][6] },\r\n                                        { year: '8', value: result[4][i - 1][7] },\r\n                                        { year: '9', value: result[4][i - 1][8] },\r\n                                        { year: '9', value: result[4][i - 1][9] }\r\n                                    ];\r\n                                    const chart = new Chart({\r\n                                        container: `c${i}`,\r\n                                        autoFit: true,\r\n                                        height: 100,\r\n                                        width: 10\r\n                                    });\r\n\r\n                                    chart.data(data);\r\n\r\n                                    chart.tooltip({\r\n                                        showMarkers: false,\r\n                                    });\r\n\r\n                                    chart.interval().position('year*value');\r\n\r\n                                    chart.interaction('element-active');\r\n\r\n                                    chart.render();\r\n                                }\r\n                                //转化步长\r\n                                for (let i = 1; i <= result[0].length; i++) {\r\n                                    const data = [\r\n                                        { year: '1', value: result[5][i - 1][0] },\r\n                                        { year: '2', value: result[5][i - 1][1] },\r\n                                        { year: '3', value: result[5][i - 1][2] },\r\n                                        { year: '4', value: result[5][i - 1][3] },\r\n                                        { year: '5', value: result[5][i - 1][4] },\r\n                                        { year: '6', value: result[5][i - 1][5] },\r\n                                        { year: '7', value: result[5][i - 1][6] },\r\n                                        { year: '8', value: result[5][i - 1][7] },\r\n                                        { year: '9', value: result[5][i - 1][8] },\r\n                                        { year: '9', value: result[5][i - 1][9] }\r\n                                    ];\r\n                                    const chart = new Chart({\r\n                                        container: `C${i}`,\r\n                                        autoFit: true,\r\n                                        height: 100,\r\n                                    });\r\n\r\n                                    chart.data(data);\r\n\r\n                                    chart.tooltip({\r\n                                        showMarkers: false,\r\n                                    });\r\n\r\n                                    chart.interval().position('year*value');\r\n\r\n                                    chart.interaction('element-active');\r\n\r\n                                    chart.render();\r\n                                }\r\n                            } else if (result[0].length >= 10) {\r\n                                //转换时长\r\n                                for (let i = 1; i <= 10; i++) {\r\n                                    const data = [\r\n                                        { year: '1', value: result[4][i - 1][0] },\r\n                                        { year: '2', value: result[4][i - 1][1] },\r\n                                        { year: '3', value: result[4][i - 1][2] },\r\n                                        { year: '4', value: result[4][i - 1][3] },\r\n                                        { year: '5', value: result[4][i - 1][4] },\r\n                                        { year: '6', value: result[4][i - 1][5] },\r\n                                        { year: '7', value: result[4][i - 1][6] },\r\n                                        { year: '8', value: result[4][i - 1][7] },\r\n                                        { year: '9', value: result[4][i - 1][8] },\r\n                                        { year: '9', value: result[4][i - 1][9] }\r\n                                    ];\r\n                                    const chart = new Chart({\r\n                                        container: `c${i}`,\r\n                                        autoFit: true,\r\n                                        height: 100,\r\n                                        width: 10\r\n                                    });\r\n\r\n                                    chart.data(data);\r\n\r\n                                    chart.tooltip({\r\n                                        showMarkers: false,\r\n                                    });\r\n\r\n                                    chart.interval().position('year*value');\r\n\r\n                                    chart.interaction('element-active');\r\n\r\n                                    chart.render();\r\n                                }\r\n                                //转化步长\r\n                                for (let i = 1; i <= 10; i++) {\r\n                                    const data = [\r\n                                        { year: '1', value: result[5][i - 1][0] },\r\n                                        { year: '2', value: result[5][i - 1][1] },\r\n                                        { year: '3', value: result[5][i - 1][2] },\r\n                                        { year: '4', value: result[5][i - 1][3] },\r\n                                        { year: '5', value: result[5][i - 1][4] },\r\n                                        { year: '6', value: result[5][i - 1][5] },\r\n                                        { year: '7', value: result[5][i - 1][6] },\r\n                                        { year: '8', value: result[5][i - 1][7] },\r\n                                        { year: '9', value: result[5][i - 1][8] },\r\n                                        { year: '9', value: result[5][i - 1][9] }\r\n                                    ];\r\n                                    const chart = new Chart({\r\n                                        container: `C${i}`,\r\n                                        autoFit: true,\r\n                                        height: 100,\r\n                                    });\r\n\r\n                                    chart.data(data);\r\n\r\n                                    chart.tooltip({\r\n                                        showMarkers: false,\r\n                                    });\r\n\r\n                                    chart.interval().position('year*value');\r\n\r\n                                    chart.interaction('element-active');\r\n\r\n                                    chart.render();\r\n                                }\r\n                            }\r\n                        }\r\n                        clearTimeout(timeout)\r\n                    }, 0);\r\n                }\r\n            }\r\n\r\n\r\n        })\r\n    }\r\n\r\n\r\n    componentDidUpdata() {\r\n    }\r\n\r\n    showColumn = () => {\r\n        return (\r\n            <>\r\n                <ColumnGroup title=\"待归因事件\">\r\n                    <Column title=\"触点事件\" dataIndex=\"touchEvents\" key=\"touchEvents\" />\r\n                </ColumnGroup>\r\n                <ColumnGroup title=\"点击规模\">\r\n                    <Column title=\"总点击数\" dataIndex=\"totalClicks\" key=\"totalClicks\" />\r\n                    <Column title=\"有效点击率\" dataIndex=\"clickRate\" key=\"clickRate\" />\r\n                </ColumnGroup>\r\n                <ColumnGroup title=\"转化分布\">\r\n                    <Column title=\"转化时长分布\" dataIndex=\"durationDistr\" key=\"durationDistr\" />\r\n                    <Column title=\"转化步长分布\" dataIndex=\"stepLengthDistr\" key=\"stepLengthDistr\" />\r\n                </ColumnGroup>\r\n                <ColumnGroup title=\"目标转化\">\r\n                    <Column title=\"实现价值\" dataIndex=\"valueRealization\" key=\"valueRealization\" />\r\n                    <Column title=\"贡献率\" dataIndex=\"contributionRate\" key=\"contributionRate\" />\r\n                </ColumnGroup>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        const result = this.props.resultData\r\n        return (\r\n            <Fragment>\r\n                <Table\r\n                    bordered={true}\r\n                    dataSource={this.state.data}\r\n                    className='reasult'\r\n                    pagination={{\r\n                        position: ['bottomCenter'],\r\n                        pageSize: 10,\r\n                        // 只有一页是不显示分页按钮\r\n                        hideOnSinglePage: true,\r\n                        onChange: function (page) {\r\n                            let timeout = setTimeout(function () {\r\n                                if (result[0] !== '' && result[0] !== undefined && result !== '') {\r\n                                    if (result[0].length <= 10) {\r\n                                        //转化时长分布\r\n                                        for (let i = (page - 1) * 10 + 1; i <= result[0].length; i++) {\r\n                                            const data = [\r\n                                                { year: '1', value: result[4][i - 1][0] },\r\n                                                { year: '2', value: result[4][i - 1][1] },\r\n                                                { year: '3', value: result[4][i - 1][2] },\r\n                                                { year: '4', value: result[4][i - 1][3] },\r\n                                                { year: '5', value: result[4][i - 1][4] },\r\n                                                { year: '6', value: result[4][i - 1][5] },\r\n                                                { year: '7', value: result[4][i - 1][6] },\r\n                                                { year: '8', value: result[4][i - 1][7] },\r\n                                                { year: '9', value: result[4][i - 1][8] },\r\n                                                { year: '9', value: result[4][i - 1][9] }\r\n                                            ];\r\n                                            const chart = new Chart({\r\n                                                container: `c${i}`,\r\n                                                autoFit: true,\r\n                                                height: 100,\r\n                                            });\r\n\r\n                                            chart.data(data);\r\n\r\n                                            chart.tooltip({\r\n                                                showMarkers: false,\r\n                                            });\r\n\r\n                                            chart.interval().position('year*value');\r\n\r\n                                            chart.interaction('element-active');\r\n\r\n                                            chart.render();\r\n\r\n                                        }\r\n                                        //转化步长分布\r\n                                        for (let i = (page - 1) * 10 + 1; i <= result[0].length; i++) {\r\n                                            const data = [\r\n                                                { year: '1', value: result[5][i - 1][0] },\r\n                                                { year: '2', value: result[5][i - 1][1] },\r\n                                                { year: '3', value: result[5][i - 1][2] },\r\n                                                { year: '4', value: result[5][i - 1][3] },\r\n                                                { year: '5', value: result[5][i - 1][4] },\r\n                                                { year: '6', value: result[5][i - 1][5] },\r\n                                                { year: '7', value: result[5][i - 1][6] },\r\n                                                { year: '8', value: result[5][i - 1][7] },\r\n                                                { year: '9', value: result[5][i - 1][8] },\r\n                                                { year: '9', value: result[5][i - 1][9] }\r\n                                            ];\r\n                                            const chart = new Chart({\r\n                                                container: `C${i}`,\r\n                                                autoFit: true,\r\n                                                height: 100,\r\n                                            });\r\n\r\n                                            chart.data(data);\r\n\r\n                                            chart.tooltip({\r\n                                                showMarkers: false,\r\n                                            });\r\n\r\n                                            chart.interval().position('year*value');\r\n\r\n                                            chart.interaction('element-active');\r\n\r\n                                            chart.render();\r\n\r\n                                        }\r\n                                    } else if (result[0].length > 10) {\r\n                                        let theOther = result[0].length % 10\r\n                                        let pageTotalNumber = parseInt(result[0].length / 10)\r\n                                        if (page <= pageTotalNumber) {\r\n                                            //转化时长分布\r\n                                            for (let i = (page - 1) * 10 + 1; i <= page * 10; i++) {\r\n                                                const data = [\r\n                                                    { year: '1', value: result[4][i - 1][0] },\r\n                                                    { year: '2', value: result[4][i - 1][1] },\r\n                                                    { year: '3', value: result[4][i - 1][2] },\r\n                                                    { year: '4', value: result[4][i - 1][3] },\r\n                                                    { year: '5', value: result[4][i - 1][4] },\r\n                                                    { year: '6', value: result[4][i - 1][5] },\r\n                                                    { year: '7', value: result[4][i - 1][6] },\r\n                                                    { year: '8', value: result[4][i - 1][7] },\r\n                                                    { year: '9', value: result[4][i - 1][8] },\r\n                                                    { year: '9', value: result[4][i - 1][9] }\r\n                                                ];\r\n                                                const chart = new Chart({\r\n                                                    container: `c${i}`,\r\n                                                    autoFit: true,\r\n                                                    height: 100,\r\n                                                });\r\n\r\n                                                chart.data(data);\r\n\r\n                                                chart.tooltip({\r\n                                                    showMarkers: false,\r\n                                                });\r\n\r\n                                                chart.interval().position('year*value');\r\n\r\n                                                chart.interaction('element-active');\r\n\r\n                                                chart.render();\r\n\r\n                                            }\r\n                                            //转化步长分布\r\n                                            for (let i = (page - 1) * 10 + 1; i <= page * 10; i++) {\r\n                                                const data = [\r\n                                                    { year: '1', value: result[5][i - 1][0] },\r\n                                                    { year: '2', value: result[5][i - 1][1] },\r\n                                                    { year: '3', value: result[5][i - 1][2] },\r\n                                                    { year: '4', value: result[5][i - 1][3] },\r\n                                                    { year: '5', value: result[5][i - 1][4] },\r\n                                                    { year: '6', value: result[5][i - 1][5] },\r\n                                                    { year: '7', value: result[5][i - 1][6] },\r\n                                                    { year: '8', value: result[5][i - 1][7] },\r\n                                                    { year: '9', value: result[5][i - 1][8] },\r\n                                                    { year: '9', value: result[5][i - 1][9] }\r\n                                                ];\r\n                                                const chart = new Chart({\r\n                                                    container: `C${i}`,\r\n                                                    autoFit: true,\r\n                                                    height: 100,\r\n                                                });\r\n\r\n                                                chart.data(data);\r\n\r\n                                                chart.tooltip({\r\n                                                    showMarkers: false,\r\n                                                });\r\n\r\n                                                chart.interval().position('year*value');\r\n\r\n                                                chart.interaction('element-active');\r\n\r\n                                                chart.render();\r\n\r\n                                            }\r\n                                        } else if (page === pageTotalNumber + 1) {\r\n                                            //转化时长分布\r\n                                            for (let i = (page - 1) * 10 + 1; i <= (page - 1) * 10 + theOther; i++) {\r\n                                                const data = [\r\n                                                    { year: '1', value: result[4][i - 1][0] },\r\n                                                    { year: '2', value: result[4][i - 1][1] },\r\n                                                    { year: '3', value: result[4][i - 1][2] },\r\n                                                    { year: '4', value: result[4][i - 1][3] },\r\n                                                    { year: '5', value: result[4][i - 1][4] },\r\n                                                    { year: '6', value: result[4][i - 1][5] },\r\n                                                    { year: '7', value: result[4][i - 1][6] },\r\n                                                    { year: '8', value: result[4][i - 1][7] },\r\n                                                    { year: '9', value: result[4][i - 1][8] },\r\n                                                    { year: '9', value: result[4][i - 1][9] }\r\n                                                ];\r\n                                                const chart = new Chart({\r\n                                                    container: `c${i}`,\r\n                                                    autoFit: true,\r\n                                                    height: 100,\r\n                                                });\r\n\r\n                                                chart.data(data);\r\n\r\n                                                chart.tooltip({\r\n                                                    showMarkers: false,\r\n                                                });\r\n\r\n                                                chart.interval().position('year*value');\r\n\r\n                                                chart.interaction('element-active');\r\n\r\n                                                chart.render();\r\n\r\n                                            }\r\n                                            //转化步长分布\r\n                                            for (let i = (page - 1) * 10 + 1; i <= (page - 1) * 10 + theOther; i++) {\r\n                                                const data = [\r\n                                                    { year: '1', value: result[5][i - 1][0] },\r\n                                                    { year: '2', value: result[5][i - 1][1] },\r\n                                                    { year: '3', value: result[5][i - 1][2] },\r\n                                                    { year: '4', value: result[5][i - 1][3] },\r\n                                                    { year: '5', value: result[5][i - 1][4] },\r\n                                                    { year: '6', value: result[5][i - 1][5] },\r\n                                                    { year: '7', value: result[5][i - 1][6] },\r\n                                                    { year: '8', value: result[5][i - 1][7] },\r\n                                                    { year: '9', value: result[5][i - 1][8] },\r\n                                                    { year: '9', value: result[5][i - 1][9] }\r\n                                                ];\r\n                                                const chart = new Chart({\r\n                                                    container: `C${i}`,\r\n                                                    autoFit: true,\r\n                                                    height: 100,\r\n                                                });\r\n\r\n                                                chart.data(data);\r\n\r\n                                                chart.tooltip({\r\n                                                    showMarkers: false,\r\n                                                });\r\n\r\n                                                chart.interval().position('year*value');\r\n\r\n                                                chart.interaction('element-active');\r\n\r\n                                                chart.render();\r\n\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                clearTimeout(timeout)\r\n                            }, 0)\r\n                        }\r\n\r\n                    }}\r\n                    scroll={{\r\n                        y: 290\r\n                    }}\r\n                    tableLayout='fixed'\r\n                    style={{ minWidth: 700 }}\r\n                >\r\n                    {this.showColumn()}\r\n                </Table>\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReasultShow;"]},"metadata":{},"sourceType":"module"}